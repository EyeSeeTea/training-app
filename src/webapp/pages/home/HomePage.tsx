import React, { useCallback, useEffect, useState } from "react";
import styled from "styled-components";
import i18n from "../../../locales";
import { BigCard } from "../../components/card-board/BigCard";
import { Cardboard } from "../../components/card-board/Cardboard";
import { Modal, ModalContent, ModalParagraph, ModalTitle } from "../../components/modal";
import { Spinner } from "../../components/spinner/Spinner";
import { useAppContext } from "../../contexts/app-context";

export const HomePage = () => {
    const { setAppState, modules, reload, hasSettingsAccess, translate } = useAppContext();

    const [loading, setLoading] = useState(true);

    const loadModule = useCallback(
        (module: string, step: number) => {
            if (step > 1) {
                setAppState({ type: "TRAINING", state: "OPEN", module, step, content: 1 });
            } else {
                setAppState({ type: "TRAINING_DIALOG", dialog: "welcome", module });
            }
        },
        [setAppState]
    );

    const openSettings = useCallback(() => {
        setAppState({ type: "SETTINGS" });
    }, [setAppState]);

    const minimize = useCallback(() => {
        setAppState(appState => ({ ...appState, minimized: true }));
    }, [setAppState]);

    const exitTutorial = useCallback(() => {
        setAppState(appState => ({ ...appState, exit: true }));
    }, [setAppState]);

    useEffect(() => {
        reload().then(() => setLoading(false));
    }, [reload]);

    return (
        <React.Fragment>
            <StyledModal
                onSettings={hasSettingsAccess ? openSettings : undefined}
                onMinimize={minimize}
                onClose={exitTutorial}
                centerChildren={true}
            >
                <ContentWrapper>
                    <ModalTitle>{i18n.t("Here is your progress on DHIS2 training")}</ModalTitle>
                    <ModalParagraph>
                        {i18n.t("Select one of these tutorials to continue learning:", {
                            nsSeparator: false,
                        })}
                    </ModalParagraph>
                    <ModalContent>
                        {loading ? (
                            <SpinnerWrapper>
                                <Spinner />
                            </SpinnerWrapper>
                        ) : (
                            <Cardboard rowSize={3}>
                                {modules
                                    .filter(module => module.installed === true)
                                    .map(({ name, id, progress, disabled, contents }, idx) => {
                                        const { lastStep, completed } = progress;
                                        const percentage = Math.round((lastStep / contents.steps.length) * 100);

                                        const handleClick = () => {
                                            loadModule(id, completed ? 0 : lastStep + 1);
                                        };

                                        return (
                                            <BigCard
                                                key={`card-${idx}`}
                                                label={translate(name)}
                                                progress={completed ? 100 : percentage}
                                                onClick={handleClick}
                                                disabled={disabled}
                                                icon={
                                                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 200 161">
                                                        <defs>
                                                            <clipPath id="prefix__a">
                                                                <path d="M0 0h200v161H0z" />
                                                            </clipPath>
                                                        </defs>
                                                        <g clipPath="url(#prefix__a)">
                                                            <path
                                                                d="M165.445 80.593a64.944 64.944 0 11-64.944-64.944 64.944 64.944 0 0164.944 64.944zM94.057 54.996l-13.85-2.689a7.067 7.067 0 00-.09-1.089l2.8-1.311a.859.859 0 00.457-.55l1.108-4.437 6.322-4.917a.816.816 0 10-1-1.288l-6.556 5.1a.781.781 0 00-.289.449l-1.077 4.355-2.217 1.03a4.683 4.683 0 00-.929-1.436 4.9 4.9 0 00.589-2.4 4.82 4.82 0 00-.667-2.529l2.615-5.148a.801.801 0 00-1.432-.718l-2.24 4.41c-.074-1.592-.18-3.957-.265-5a4.967 4.967 0 00-.332-1.889v-.082a.172.172 0 00-.074.027.176.176 0 00-.07-.027v.092a4.816 4.816 0 00-.332 1.889c-.09 1.038-.2 3.4-.265 5l-2.232-4.41a.801.801 0 10-1.432.718l2.615 5.148a4.82 4.82 0 00-.667 2.529 4.9 4.9 0 00.589 2.4 4.683 4.683 0 00-.943 1.426l-2.213-1.03-1.069-4.351a.781.781 0 00-.289-.449l-6.556-5.1a.805.805 0 10-.991 1.268l6.322 4.932 1.108 4.457a.859.859 0 00.457.55l2.8 1.311a7.067 7.067 0 00-.09 1.089l-13.848 2.689s-2.568.983-1.8 2.408c.609 1.116 6.389 2.342 8.879 2.81l-5.436 7.816a.823.823 0 00.211 1.136.874.874 0 00.461.152.8.8 0 00.667-.343l6.635-9.562 1.9-1.35v8.921l-4.813 11.038a.823.823 0 00.421 1.077.894.894 0 00.324.078.781.781 0 00.742-.476l4.878-11.2a.812.812 0 00.066-.32V57.189a.781.781 0 00-.043-.23l1.663-1.171c0 .519-.027 1.046-.027 1.592 0 5.827 1.026 10.584 2.342 10.927v.027a.452.452 0 00.07 0 .414.414 0 00.074 0v-.031c1.3-.332 2.342-5.073 2.342-10.927 0-.546 0-1.073-.027-1.592l1.663 1.171a.781.781 0 00-.043.23v10.01a.812.812 0 00.066.32l4.878 11.2a.781.781 0 00.742.476.894.894 0 00.324-.078.823.823 0 00.421-1.077L82.545 67v-8.921l1.9 1.35 6.635 9.562a.8.8 0 00.667.343.874.874 0 00.461-.152.823.823 0 00.211-1.136l-5.436-7.833c2.49-.476 8.27-1.694 8.879-2.81.764-1.424-1.805-2.407-1.805-2.407zm48.916 2.412c-.6 1.116-6.385 2.342-8.875 2.81l5.432 7.833a.823.823 0 01-.211 1.136.862.862 0 01-.461.152.78.78 0 01-.663-.343l-6.635-9.562-1.893-1.35v8.921l4.8 11.041a.82.82 0 01-.421 1.077.859.859 0 01-.324.078.78.78 0 01-.742-.476l-4.878-11.2a.808.808 0 01-.062-.32V57.189a.921.921 0 01.043-.23l-1.659-1.171c0 .519.023 1.046.023 1.592 0 5.827-1.026 10.584-2.322 10.927v.027a.452.452 0 01-.07 0 .635.635 0 01-.074 0v-.031c-1.3-.332-2.342-5.073-2.342-10.927 0-.546 0-1.073.027-1.592l-1.663 1.171a.921.921 0 01.043.23v10.01a.808.808 0 01-.062.32l-4.878 11.2a.781.781 0 01-.742.476.858.858 0 01-.324-.078.82.82 0 01-.421-1.077l4.8-11.041v-8.916l-1.882 1.35-6.635 9.562a.781.781 0 01-.663.343.863.863 0 01-.461-.152.823.823 0 01-.211-1.136l5.432-7.833c-2.49-.476-8.27-1.694-8.875-2.81-.781-1.424 1.8-2.408 1.8-2.408l13.851-2.689a7.582 7.582 0 01.094-1.089l-2.812-1.31a.839.839 0 01-.453-.55l-1.086-4.438-6.322-4.917a.805.805 0 11.991-1.268l6.553 5.1a.781.781 0 01.293.449l1.077 4.351 2.213 1.034a4.683 4.683 0 01.933-1.436 5.159 5.159 0 01.074-4.925l-2.615-5.148a.803.803 0 111.436-.718l2.24 4.41c.07-1.592.18-3.957.265-5a4.817 4.817 0 01.332-1.889v-.073a.172.172 0 01.074.027.156.156 0 01.07-.027v.082a4.816 4.816 0 01.332 1.889c.086 1.038.2 3.4.265 5l2.24-4.41a.803.803 0 111.436.718l-2.615 5.148a5.159 5.159 0 01.074 4.925 4.683 4.683 0 01.933 1.436l2.213-1.034 1.077-4.351a.781.781 0 01.293-.449l6.556-5.1a.803.803 0 11.987 1.268l-6.322 4.908-1.108 4.457a.839.839 0 01-.453.55l-2.806 1.311a7.583 7.583 0 01.094 1.089l13.851 2.689s2.564.964 1.795 2.392zm-47.116 47.116c-.609 1.112-6.389 2.342-8.879 2.806l5.436 7.837a.823.823 0 01-.211 1.136.843.843 0 01-.461.152.781.781 0 01-.667-.34l-6.633-9.566-1.9-1.346v8.921l4.815 11.041a.823.823 0 01-.421 1.077.886.886 0 01-.324.074.781.781 0 01-.742-.476l-4.878-11.2a.812.812 0 01-.066-.32v-10.01a.726.726 0 01.043-.226l-1.663-1.171c0 .523.027 1.046.027 1.592 0 5.831-1.026 10.584-2.342 10.927v.031a.414.414 0 01-.074 0 .453.453 0 01-.07 0v-.031c-1.3-.336-2.342-5.073-2.342-10.927 0-.546 0-1.069.027-1.592l-1.663 1.171a.726.726 0 01.043.226v10.014a.812.812 0 01-.066.32l-4.878 11.2a.781.781 0 01-.742.476.886.886 0 01-.324-.074.823.823 0 01-.421-1.077l4.808-11.041v-8.929l-1.9 1.346-6.632 9.566a.781.781 0 01-.667.34.843.843 0 01-.461-.152.823.823 0 01-.211-1.136l5.439-7.833c-2.49-.476-8.27-1.694-8.879-2.806-.781-1.424 1.8-2.412 1.8-2.412l13.851-2.689a7.068 7.068 0 01.09-1.089l-2.8-1.307a.862.862 0 01-.457-.554l-1.108-4.453-6.33-4.921a.805.805 0 11.991-1.268l6.556 5.1a.781.781 0 01.289.449l1.081 4.355 2.252 1.03a4.66 4.66 0 01.929-1.432 4.913 4.913 0 01-.589-2.4 4.8 4.8 0 01.667-2.529l-2.615-5.148a.802.802 0 111.432-.722l2.24 4.423c.07-1.592.176-3.957.265-5a4.785 4.785 0 01.332-1.889v-.078a.249.249 0 01.07.023.234.234 0 01.074-.023v.082a4.934 4.934 0 01.332 1.889c.086 1.038.191 3.4.265 5l2.24-4.414a.802.802 0 111.432.722l-2.61 5.147a4.8 4.8 0 01.667 2.529 4.913 4.913 0 01-.589 2.4 4.66 4.66 0 01.929 1.432l2.217-1.03 1.076-4.359a.781.781 0 01.289-.449l6.556-5.109a.805.805 0 11.991 1.268l-6.322 4.921-1.108 4.453a.862.862 0 01-.457.554l-2.8 1.307a7.068 7.068 0 01.09 1.089l13.851 2.689s2.579.989 1.81 2.413zm47.117 0c-.6 1.112-6.385 2.342-8.875 2.806l5.433 7.837a.827.827 0 01-.671 1.288.781.781 0 01-.663-.34l-6.636-9.566-1.893-1.346v8.921l4.8 11.041a.82.82 0 01-.421 1.077.85.85 0 01-.324.074.781.781 0 01-.742-.476l-4.878-11.2a.807.807 0 01-.062-.32v-10.014a.863.863 0 01.043-.226l-1.655-1.171c0 .523.023 1.046.023 1.592 0 5.831-1.026 10.584-2.322 10.927v.031a.453.453 0 01-.07 0 .633.633 0 01-.074 0v-.031c-1.3-.336-2.342-5.073-2.342-10.927 0-.546 0-1.069.027-1.592l-1.661 1.17a.863.863 0 01.043.226v10.015a.808.808 0 01-.062.32l-4.878 11.2a.781.781 0 01-.742.476.851.851 0 01-.324-.074.82.82 0 01-.421-1.077l4.8-11.041v-8.925l-1.89 1.35-6.635 9.565a.781.781 0 01-.663.34.827.827 0 01-.671-1.288l5.433-7.833c-2.49-.476-8.27-1.694-8.875-2.806-.781-1.424 1.8-2.412 1.8-2.412l13.851-2.689a7.583 7.583 0 01.094-1.089l-2.814-1.31a.847.847 0 01-.453-.554l-1.108-4.453-6.32-4.921a.805.805 0 01.991-1.268l6.553 5.1a.781.781 0 01.293.449l1.077 4.355 2.213 1.03a4.683 4.683 0 01.933-1.432 5.159 5.159 0 01.074-4.925l-2.615-5.148a.804.804 0 111.436-.722l2.24 4.414c.07-1.592.18-3.957.265-5a4.785 4.785 0 01.332-1.889v-.078a.234.234 0 01.074.023.214.214 0 01.105-.023v.082a4.785 4.785 0 01.332 1.889c.086 1.038.2 3.4.265 5l2.24-4.414a.804.804 0 111.436.722l-2.615 5.148a5.159 5.159 0 01.074 4.925 4.683 4.683 0 01.933 1.432l2.213-1.03 1.077-4.355a.781.781 0 01.293-.449l6.556-5.1a.803.803 0 11.987 1.268l-6.321 4.921-1.108 4.453a.847.847 0 01-.453.554l-2.806 1.308a7.582 7.582 0 01.094 1.089l13.851 2.689s2.548.983 1.779 2.407z"
                                                                fill="#276696"
                                                                fillRule="evenodd"
                                                            />
                                                        </g>
                                                    </svg>
                                                }
                                            />
                                        );
                                    })}
                            </Cardboard>
                        )}
                    </ModalContent>
                </ContentWrapper>
            </StyledModal>
        </React.Fragment>
    );
};

const StyledModal = styled(Modal)`
    position: fixed;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);

    ${ModalContent} {
        max-width: none;
        max-height: 60vh;
        width: 800px;
        padding: 0px;
        margin: 0px 10px 20px 10px;
    }
`;

const ContentWrapper = styled.div`
    padding: 15px;
`;

const SpinnerWrapper = styled.div`
    height: 150px;
    display: flex;
    place-content: center;
    align-items: center;
`;
